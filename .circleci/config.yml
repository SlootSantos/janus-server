# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.0.0
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      # - run: go test -v ./...

      # - run: aws elasticbeanstalk create-application-version --application-name janus_server --version-label v2 --description MyAppv1 --source-bundle S3Bucket="elasticbeanstalk-us-east-1-108151951856",S3Key="2020128u9Y-Dockerrun.aws.json" --auto-create-application --region=us-east-1 --process      
      # - run: aws elasticbeanstalk update-environment --application-name janus_server --environment-name=janus-server-production --version-label v2 --region=us-east-1
  test:
    machine: true
    steps:
      - checkout
      - run: echo -e "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID\nAWS_SECRET_KEY=$AWS_SECRET_KEY\nPIPELINE_DEPLOYER_ACCESS=$PIPELINE_DEPLOYER_ACCESS\nPIPELINE_DEPLOYER_SECRET=$PIPELINE_DEPLOYER_SECRET\nOAUTH_CLIENT_ID=$OAUTH_CLIENT_ID\nOAUTH_CLIENT_SECRET=$OAUTH_CLIENT_SECRET\nOAUTH_CLIENT_STATE=$OAUTH_CLIENT_STATE\nOAUTH_CLIENT_SIGNING_KEY=$OAUTH_CLIENT_SIGNING_KEY\nREDIS_HOSTNAME=$REDIS_HOSTNAME\nREDIS_PORT=$REDIS_PORT\nREDIS_PASSWORD=" > .env
      - run: ./ci/push_docker_image.sh
      - run: ls -la
      - run: aws s3 cp Dockerrun.aws.json s3://elasticbeanstalk-us-east-1-108151951856/Dockerrun.aws.v_$CIRCLE_BUILD_NUM.json
      - run: aws elasticbeanstalk create-application-version --application-name janus_server --version-label v$CIRCLE_BUILD_NUM --description New Version number $CIRCLE_BUILD_NUM --source-bundle S3Bucket="elasticbeanstalk-us-east-1-108151951856",S3Key="Dockerrun.aws.v_$CIRCLE_BUILD_NUM.json" --auto-create-application --region=us-east-1 --process
      - run: aws elasticbeanstalk update-environment --application-name janus_server --environment-name=janus-server-production --version-label v$CIRCLE_BUILD_NUM --region=us-east-1

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      # - test2:
      #     requires:
      #       - test1
      # - deploy:
      #     requires:
      #       - test2 